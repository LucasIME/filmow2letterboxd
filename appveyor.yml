environment:
  global:
    RUST_VERSION: nightly

    CRATE_NAME: filmow2letterboxd

  matrix:
    # Windows
    - TARGET: x86_64-pc-windows-gnu

install:
  - ps: >-
      If ($env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($env:TARGET -eq 'i686-pc-windows-gnu') {
        $env:PATH += ';C:\msys64\mingw32\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V

test_script:
  # we don't run the "test phase" when doing deploys
  - if [%APPVEYOR_REPO_TAG%]==[false] (
      cargo build --target %TARGET% --release &&
      cargo test --target %TARGET% --release
    )

before_deploy:
  - cargo rustc --target %TARGET% --release --bin %CRATE_NAME% 
  - ps: ci\before_deploy.ps1

deploy:
  artifact: /.*\.zip/
  auth_token:
    secure: fH1OYYOG1xnAfb2+HoWctqRFWKyw3sucEnAc17xcYKt37F6X1t6IZgAg8iFg2r48
  description: ''
  on:
    RUST_VERSION: nightly
    appveyor_repo_tag: true
  provider: GitHub

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

# Building is done in the test phase, so we disable Appveyor's build phase.
build: false